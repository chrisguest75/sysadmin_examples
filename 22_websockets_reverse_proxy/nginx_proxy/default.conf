# /etc/nginx/conf.d/default.conf

upstream info_a {
     server info_a:9898 max_fails=0 fail_timeout=30s;
}
upstream info_b {
    server info_b:9898 max_fails=0 fail_timeout=30s;
}
upstream info_round_robin {
     server info_a:9898 max_fails=0 fail_timeout=30s;
     server info_b:9898 max_fails=0 fail_timeout=30s;
}
upstream websocket {
    server info_a:9898;
    server info_b:9898;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $http_group $group {
    default "http://info_a";    
    new "http://info_b";    
}

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # header based routing 
    # group: default 
    # group: new 

    location /group {
        rewrite /group/(.*) /$1  break;
        proxy_pass $group;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        add_header X-location "location block /$group" always;
    }


    # this will be overridden by the add_header in location
    # always ensures for all response types. 
    add_header X-server "server block" always;
    add_header X-Hello "hello" always;
    add_header X-Proxy-Version "$VERSION" always;
    
    #access_log  /var/log/nginx/host.access.log  main;
    location /a {
        rewrite /a/(.*) /$1  break;
        #proxy_pass http://0.0.0.0:9001;
        proxy_pass http://info_a;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        add_header X-location "location block /a" always;
    }

    location /b {
        rewrite /b/(.*) /$1  break;
        #proxy_pass http://0.0.0.0:9002;
        proxy_pass http://info_b;        
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }

    location /c {
        rewrite /c/(.*) /$1  break;
        #proxy_pass http://0.0.0.0:9002;
        proxy_pass http://info_round_robin;        
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }

    location /info {
		return 200 "Info.\n
Server Address:\t\t\t $server_addr:$server_port\n
Service-Name-Code Header:\t $http_service_name_code
Service-Version Header:\t\t $http_service_version\n
Host Header:\t\t\t $host
Request URI:\t\t\t $request_uri
Served by NGINX $nginx_version\n";
	}

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /ws {
        proxy_pass http://info_round_robin;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }

    location /wsa {
        rewrite /wsa/(.*) /$1  break;
        proxy_pass http://info_a;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }

    location /wsb {
        rewrite /wsb/(.*) /$1  break;
        proxy_pass http://info_b;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}